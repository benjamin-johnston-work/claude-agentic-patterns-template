### DeepWiki Clone - Feature 1 Test Requests
### Repository Connection and Management API Tests

@baseUrl = http://localhost:5001

### Health Check
GET {{baseUrl}}/health
Accept: application/json

### GraphQL Endpoint Test - Get All Repositories
POST {{baseUrl}}/graphql
Content-Type: application/json

{
  "query": "{ repositories { id name url status description createdAt updatedAt } }"
}

### Add a Repository (Requires GitHub Personal Access Token)
### For public repos, you can try without accessToken but may hit rate limits
### For private repos or to avoid rate limits, provide a valid GitHub PAT
POST {{baseUrl}}/graphql
Content-Type: application/json

{
  "query": "mutation { addRepository(input: { url: \"https://github.com/microsoft/calculator\", accessToken: \"your-github-pat-here\" }) { id name url status description } }"
}

### Add a Repository (Public repo without token - may hit rate limits)
POST {{baseUrl}}/graphql
Content-Type: application/json

{
  "query": "mutation { addRepository(input: { url: \"https://github.com/microsoft/calculator\" }) { id name url status description } }"
}

### Get Repository by ID (Replace {id} with actual ID from add response)
POST {{baseUrl}}/graphql
Content-Type: application/json

{
  "query": "query { repository(id: \"replace-with-actual-id\") { id name url status description branches { name isDefault } statistics { totalFiles totalLines languageBreakdown { language lineCount percentage } } } }"
}

### Refresh Repository (Replace {id} with actual ID)
POST {{baseUrl}}/graphql
Content-Type: application/json

{
  "query": "mutation { refreshRepository(id: \"replace-with-actual-id\") { id status lastAnalyzed } }"
}

### Remove Repository (Replace {id} with actual ID) 
POST {{baseUrl}}/graphql
Content-Type: application/json

{
  "query": "mutation { removeRepository(id: \"replace-with-actual-id\") }"
}

### GraphQL Schema Introspection
POST {{baseUrl}}/graphql
Content-Type: application/json

{
  "query": "query IntrospectionQuery { __schema { queryType { name fields { name type { name kind ofType { name kind } } } } mutationType { name fields { name type { name kind ofType { name kind } } } } } }"
}